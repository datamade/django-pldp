# Generated by Django 2.1.3 on 2018-12-03 12:26

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('study', '0001_initial'),
        ('location', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('time_start', models.DateTimeField(help_text='Exact date and time that the survey count started')),
                ('time_stop', models.DateTimeField(help_text='Exact date and time that the survey count stopped. Surveys of moving people should be no less than 10 minutes in length. Surveys of stationary people should be snapshots in time.')),
                ('time_character', models.CharField(blank=True, help_text='Indicate if anything out of the ordinary took place at the specific time of the survey count string that may have impacted the results.', max_length=255, null=True)),
                ('representation', models.CharField(choices=[('absolute', 'Absolute'), ('relative', 'Relative')], help_text='Indicate whether the data collected a total of the people present within the survey count time or a representative sample', max_length=8)),
                ('microclimate', models.CharField(blank=True, help_text='Perceived weather condition on the specific survey location.', max_length=255, null=True)),
                ('temperature_c', models.IntegerField(blank=True, help_text='Official temperature measured in the survey location at the time of the survey count.', null=True)),
                ('method', models.CharField(choices=[('analog', 'Analog'), ('video', 'Video'), ('motion sensor', 'Motion sensor'), ('pressure sensor', 'Pressure sensor'), ('Wi-Fi signal', 'Wi-Fi signal'), ('GPS', 'GPS'), ('radar', 'Radar'), ('cell tower', 'Cell tower'), ('digital application', 'Digital application'), ('drone', 'Drone'), ('road tubes', 'Road tubes')], help_text='Description of the survey count method', max_length=20)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='location.Location')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study.Study')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('gender', 'Gender'), ('age', 'Age'), ('mode', 'Mode'), ('posture', 'Posture'), ('activities', 'Activities'), ('groups', 'Groups'), ('objects', 'Objects'), ('geotag', 'GeoTag')], db_index=True, help_text='Name of the component', max_length=15)),
                ('total', models.IntegerField(blank=True, help_text='Indicate the number of people counted within the row. This field is not an ID, but it should be included with every survey.', null=True)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SurveyRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.Survey')),
            ],
        ),
        migrations.AddField(
            model_name='surveycomponent',
            name='row',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='survey.SurveyRow'),
        ),
    ]
